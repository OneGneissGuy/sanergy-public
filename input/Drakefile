
wget_unzip()
        mkdir -p $(dirname $OUTPUT0)
        mkdir -p $(dirname $OUTPUT1)
        wget --output-document="$OUTPUT0" "$URL"
        unzip -o "$OUTPUT0" -d $(dirname $OUTPUT1)

extract_shapefiles_fromzip()
        DIRNAME=$(dirname $OUTPUT)
        BASENAME=$(basename $OUTPUT | sed 's/.shp//')
        unzip -joDD $INPUT */$BASENAME.* -d $DIRNAME

import_shapefile()
        BASENAME=$(basename $INPUT | sed 's/.shp//')
        BASENAME_LOWERCASE=$(echo $BASENAME | tr -d ':' | tr [:upper:] [:lower:])
        shp2pgsql -d -s 2274 $INPUT shapefiles."$BASENAME_LOWERCASE" | psql -q
        touch $OUTPUT


;;; SHAPEFILES ;;;
psql/input/shapefiles/SanergyFresh_Life_mapping_areas <- data/input/shapefiles/SanergyFresh_Life_mapping_areas.kml
	ogr2ogr -f "PostgreSQL" PG:"host=$PGHOST user=$PGUSER dbname=$PGDATABASE password=$PGPASSWORD active_schema=shapefiles" $INPUT
	touch $OUTPUT

psql/input/shapefiles/watsan_Mathare <- data/input/shapefiles/Map_Kibera/Mathare-watsan-shapefile/watsan.shp [method:import_shapefile]
psql/input/shapefiles//watsan_Mukuru <- data/input/shapefiles/Map_Kibera/MKR-watsan-shapefile/watsan.shp [method:import_shapefile]
psql/input/shapefiles/boundary_Kibera <- data/input/shapefiles/Map_Kibera/Shapefiles/kibera_boundary-shapefile/Boundary.shp [method:import_shapefile]
psql/input/shapefiles/boundary_Mathare <- data/input/shapefiles/Map_Kibera/Shapefiles/Mathare_boundary-shapefile/Boundary.shp [method:import_shapefile]
psql/input/shapefiles/boundary_Mukuru <- data/input/shapefiles/Map_Kibera/Shapefiles/Mukuru_boundary-shapefile/Boundary.shp [method:import_shapefile]


;;; IPA Survey ;;;
data/input/IPA/IPA_data_incomplete.csv <- input/IPA_data_incomplete.R, data/input/IPA/IPA_data_incomplete.sav
	R CMD BATCH $INPUT0
data/input/IPA/IPA_data_incomplete_NAreplaced.csv <- data/input/IPA/IPA_data_incomplete.csv
	sed -E 's~("N/A"|NA)~~g' $INPUT > $OUTPUT
psql/input/ipa_data_incomplete_NAreplaced <- input/ipa_data_incomplete.sql, data/input/IPA/IPA_data_incomplete_NAreplaced.csv [method:psql]


;;; Collection Schedule ;;;
data/input/wheelCut.csv, data/input/truckCut.csv, data/input/tukCut.csv <- input/extract_schedule.sh, data/input/Logistics_schedule.xlsx
  eval ${INPUT0}
psql/input/Collection_Schedule_Wheelbarrow, psql/input/Collection_Schedule_Truck, psql/input/Collection_Schedule_Tuktuk  <- input/CollectionSchedule_input.sql, data/input/wheelCut.csv, data/input/truckCut.csv, data/input/tukCut.csv [method:psql]



;;; SQL SERVER DATA ;;;
