
wget_unzip()
        mkdir -p $(dirname $OUTPUT0)
        mkdir -p $(dirname $OUTPUT1)
        wget --output-document="$OUTPUT0" "$URL"
        unzip -o "$OUTPUT0" -d $(dirname $OUTPUT1)

extract_shapefiles_fromzip()
        DIRNAME=$(dirname $OUTPUT)
        BASENAME=$(basename $OUTPUT | sed 's/.shp//')ls /
        unzip -joDD $INPUT */$BASENAME.* -d $DIRNAME

import_shapefile()
        BASENAME=$(basename $INPUT | sed 's/.shp//')
        BASENAME_LOWERCASE=$(echo $BASENAME | tr -d ':' | tr [:upper:] [:lower:])
        shp2pgsql -d -s 2274 $INPUT shapefiles."$BASENAME_LOWERCASE" | psql -q
        touch $OUTPUT


;;; SHAPEFILES ;;;
psql/input/shapefiles/SanergyFresh_Life_mapping_areas <- data/input/shapefiles/SanergyFresh_Life_mapping_areas.kml
	ogr2ogr -f "PostgreSQL" PG:"host=$PGHOST user=$PGUSER dbname=$PGDATABASE password=$PGPASSWORD active_schema=shapefiles" $INPUT
	touch $OUTPUT
psql/input/shapefiles/kibera_public <- data/input/shapefiles/kibera_public.kml
	ogr2ogr -f "PostgreSQL" PG:"host=$PGHOST user=$PGUSER dbname=$PGDATABASE password=$PGPASSWORD active_schema=shapefiles_kibera" $INPUT
	touch $OUTPUT
psql/input/shapefiles/mathare_public <- data/input/shapefiles/mathare_public.kml
	ogr2ogr -f "PostgreSQL" PG:"host=$PGHOST user=$PGUSER dbname=$PGDATABASE password=$PGPASSWORD active_schema=shapefiles_mathare" $INPUT
	touch $OUTPUT
psql/input/shapefiles/mukuru_public <- data/input/shapefiles/mukuru_public.kml
	ogr2ogr -f "PostgreSQL" PG:"host=$PGHOST user=$PGUSER dbname=$PGDATABASE password=$PGPASSWORD active_schema=shapefiles_mukuru" $INPUT
	touch $OUTPUT

psql/input/shapefiles/watsan_Mathare <- data/input/shapefiles/Map_Kibera/Mathare-watsan-shapefile/watsan.shp [method:import_shapefile]
psql/input/shapefiles//watsan_Mukuru <- data/input/shapefiles/Map_Kibera/MKR-watsan-shapefile/watsan.shp [method:import_shapefile]
psql/input/shapefiles/boundary_Kibera <- data/input/shapefiles/Map_Kibera/Shapefiles/kibera_boundary-shapefile/Boundary.shp [method:import_shapefile]
psql/input/shapefiles/boundary_Mathare <- data/input/shapefiles/Map_Kibera/Shapefiles/Mathare_boundary-shapefile/Boundary.shp [method:import_shapefile]
psql/input/shapefiles/boundary_Mukuru <- data/input/shapefiles/Map_Kibera/Shapefiles/Mukuru_boundary-shapefile/Boundary.shp [method:import_shapefile]


;;; IPA Survey ;;;
data/input/IPA/IPA_data_incomplete.csv <- input/IPA_data_incomplete.R, data/input/IPA/IPA_data_incomplete.sav
	R CMD BATCH $INPUT0
data/input/IPA/IPA_data_incomplete_NAreplaced.csv <- data/input/IPA/IPA_data_incomplete.csv
	sed -E 's~("N/A"|NA)~~g' $INPUT > $OUTPUT
psql/input/ipa_data_incomplete_NAreplaced <- input/ipa_data_incomplete.sql, data/input/IPA/IPA_data_incomplete_NAreplaced.csv [method:psql]


;;; Collection Schedule ;;;
data/input/wheelCut.csv, data/input/truckCut.csv, data/input/tukCut.csv <- input/extract_schedule.sh, data/input/Logistics_schedule.xlsx
	bash $INPUT0
psql/input/Collection_Schedule_Wheelbarrow <- input/CollectionSchedule_input.sql, data/input/wheelCut.csv, data/input/truckCut.csv, data/input/tukCut.csv [method:psql]

;;; School by Route ;;;
;data/input/school_by_route.csv <- input/extract_school.sh, data/input/Logistics_schedule.xlsx
;in2csv --sheet "SF_check" data/input/Logistics_schedule.xlsx | csvcut -c 1-25 > data/input/school_by_route.csv

psql/input/Collection_Schedule_School <- input/CollectionSchedule_input.sql, data/input/school_by_route.csv [method:psql]
psql/input/new_geo_data <- input/CollectionSchedule_input.sql, data/input/new_geo_data.csv [method:psql]
psql/input/toilet_cases <- input/CollectionSchedule_input.sql, data/input/AllCasesAreaToiletID.csv [method:psql]

;;; Model tables ;;;
psql/input/model_tables <- input/model_reporting_tables.sql, data/input/AllCasesAreaToiletID.csv [method:psql]

;;; Toilet Coordinates ;;;
psql/input/toilet_coordinates <- input/ToiletCoords_input.sql, data/input/ToiletCoords.csv [method:psql]

;;; Route Schedule Since Feb 2016 ;;;
psql/input/schedule_routes <- input/schedule_routes.sql, data/input/Route_Master_All_Dates.csv [method:psql]

;;; WEATHER ;;;
data/input/weather/weather_download_jkia <- input/weather/weather_download.sh
        DIRNAME=$(dirname $OUTPUT)
        bash $INPUT $DIRNAME '637400' '99999'
        touch $OUTPUT
data/input/weather/weather_master.csv <- input/weather/weather_schema.csv, data/input/weather/weather_download_jkia
        gunzip -c $(dirname $OUTPUT)/*.gz |
        sed 's/-9999/     /g' |
        in2csv -H -s $INPUT0 > $OUTPUT
psql/input/weather/jkia <- input/weather/weather.sql, data/input/weather/weather_master.csv [method:psql]

;;; PREMODELING DATA ;;;
psql/input/toiletcollection <- premodeling/ProcessCollectionsData.py
	python premodeling/ProcessCollectionsData.py

psql/input/toilethistory <- input/geo_spatial_toilets.sql, data/input/weather/weather_master.csv [method:psql]

;;; SQL SERVER DATA ;;;
